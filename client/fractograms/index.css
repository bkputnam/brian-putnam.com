:root {
    /* See also: CELL_WIDTH_PX in consts.ts */
    --letter-side-len: 60px;
    --border-width: 2px;
    --font-family: 'Courier New', 'Lucida Console', 'Monaco', monospace;
    --box-side-len: calc(var(--letter-side-len) * 5 + var(--border-width) * 6);
}

html,
body {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;
    margin: 0;
    padding: 0;
    overscroll-behavior: none;
    user-select: none;
}

body {
    display: flex;
    flex-direction: column;
    background-color: rgb(245, 245, 245);
}

h1 {
    text-align: center;
    margin: 10px 0 15px 0;
    font-family: var(--font-family);
}

:focus-visible {
    outline: 1px dotted black;
}

#timer-hint-form {
    width: calc(var(--letter-side-len) * 5 + var(--border-width) * 6);
    margin: 0 auto 15px auto;
    text-align: center;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

#timer-hint-form>* {
    flex-basis: 1;
}

#timer {
    width: 120px;
    text-align: center;
}

#hint-btn {
    width: 80px;
}

div#play-area {
    width: 100%;
    height: auto;
    flex-grow: 1;

    /* Play area should also be display:flex so that we can make room for the
    WinMessage later on */
    display: flex;
    flex-direction: column;
}

svg#play-area-svg {
    display: block;
    width: 100%;
    /* By default (when no win message is shown) the play area should take up
    all available height so that the scattered pieces are visible */
    flex-grow: 1;
    /* When the puzzle is solved and the WinMessage is shown, use min-height to
    make sure that the entire board is still visible */
    min-height: var(--box-side-len);
}

div#play-area.solved svg#play-area-svg {
    /* Once the puzzle is solved, the play area <svg> element no longer needs to
    to take up the entire height of the page, because there are no more pieces
    hanging about */
    flex-grow: 0;
}

div#play-area.solved .win-message {
    /* Cause the WinMessage to take up the rest of the height of the page
    because it's the last thing on the page */
    flex-grow: 1;
}

.win-message {
    width: var(--box-side-len);
    margin: auto;
}

.win-message h2 {
    text-align: center;
}

.win-message .share {
    display: block;
    width: 150px;
    margin: auto;
}

svg#centering-svg {
    overflow: visible;
}

#board {
    transform:
        translateX(calc((var(--letter-side-len) + var(--border-width)) * -2.5));
}

#board .cell {
    fill: rgb(255, 255, 255);
    stroke-width: calc(var(--border-width));
    stroke: black;
}

#board .cell.hint {
    fill: rgb(200, 200, 200);
}

[bkp-draggable] {
    cursor: grab;
    user-select: none;
}

.solved [bkp-draggable] {
    cursor: auto;
}

.piece {
    stroke-width: calc(var(--border-width));
    stroke: black;
    fill: #00e8e8;
}

.piece.p1 {
    fill: #51A3A3;
}

.piece.p2 {
    fill: #F18F01;
}

.piece.p3 {
    fill: #5448C8;
}

.piece.p4 {
    fill: #99C24D;
}

.piece.p5 {
    fill: #41BBD9;
}

.piece.p6 {
    fill: #297373;
}

.letter {
    /* See also: FONT_SIZE in consts.ts */
    font-size: calc(var(--letter-side-len) * 0.75);
    font-family: var(--font-family);

    /* Don't allow clicking on letters, which would prevent drag-n-drop */
    pointer-events: none;

    /* Set these explicitly so that we don't accidentally inherit them from
        .piece */
    fill: black;
    stroke: black;
    stroke-width: 1px;
}

dialog {
    /* Disable default Chrome style */
    border: none;
    /* Default on Chrome is 1em which is ~16px. This just makes it explicit */
    padding: 16px;
    box-shadow: 0px 0px 20px 0px #3b3b3b;
    border-radius: 5px;
}

dialog .dialog-header {
    display: flex;
    flex-direction: row;
    width: 100%;
}

dialog .dialog-header .title {
    flex-grow: 1;
}

dialog .dialog-header .close-btn {
    border: none;
    background-color: rgba(255, 255, 255, 0);
    padding: 3px;
    cursor: pointer;
}

dialog .close-btn img {
    width: 20px;
    height: 20px;
}

dialog .dialog-content {
    width: 100%;
}

dialog .dialog-content video {
    display: block;
    margin: auto;
}

.carousel {
    overflow: hidden;
}

.carousel .carousel-contents {
    transition: transform 250ms;

    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    grid-column-gap: 5px;
}

.carousel .carousel-contents .carousel-page-container {
    width: 100%;
    height: 100%;
}

.carousel .carousel-contents .carousel-page-container>* {
    width: 100%;
    /* height: 100%; */
}

.carousel .carousel-contents .carousel-page-container video {
    max-width: 75%;
    width: 225px;
    max-height: 400px;
}